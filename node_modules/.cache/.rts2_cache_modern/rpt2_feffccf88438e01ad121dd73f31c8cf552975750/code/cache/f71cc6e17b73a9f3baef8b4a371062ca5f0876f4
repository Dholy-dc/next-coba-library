{"code":"import { BASE_PATH_HRIS, BASE_PATH_NOTIF } from \"./api\";\r\nimport { axiosGet, axiosPost } from \"./axiosaction\";\r\nexport const getMessageRecieve = async (url, dataauthusman) => {\r\n    const res = await axiosGet(url, dataauthusman);\r\n    return res;\r\n};\r\nexport const getDataPegawaiByNip = async (dataauthusman, data) => {\r\n    const body = {\r\n        nip: data,\r\n    };\r\n    const res = await axiosPost(BASE_PATH_HRIS.userdatabyniparray, body, dataauthusman);\r\n    return res;\r\n};\r\nexport const getPegawaiByNama = async (dataauthusman, nama) => {\r\n    const datanama = {\r\n        nama: nama,\r\n    };\r\n    const res = await axiosPost(BASE_PATH_HRIS.get_pegawai_by_nama, datanama, dataauthusman);\r\n    return res;\r\n};\r\nexport const createColllection = async (dataauthusman, nip) => {\r\n    const res = await axiosGet(BASE_PATH_NOTIF.create_collection + nip, dataauthusman);\r\n    return res;\r\n};\r\nexport const getPegawai = async (dataauthusman, limit, offset) => {\r\n    const res = await axiosGet(BASE_PATH_HRIS.get_pegawai + `${limit}/${offset}`, dataauthusman);\r\n    return res;\r\n};\r\nexport const postManyMessage = async (dataauthusman, body, nip) => {\r\n    const res = await axiosPost(BASE_PATH_NOTIF.post_many_message + nip, body, dataauthusman);\r\n    return res;\r\n};\r\nexport const fetchReadMessage = async (dataauthusman, id) => {\r\n    const res = await axiosGet(BASE_PATH_NOTIF.read_message + id, dataauthusman);\r\n    return res;\r\n};\r\n//# sourceMappingURL=fetchaction.js.map","references":["/Users/macbookm2/Documents/project/package/my-component-library/src/api.tsx","/Users/macbookm2/Documents/project/package/my-component-library/src/axiosaction.tsx"],"map":"{\"version\":3,\"file\":\"fetchaction.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/fetchaction.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,MAAM,OAAO,CAAC;AACxD,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAEpD,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,EAAE,GAAW,EAAE,aAAqB,EAAE,EAAE;IAC5E,MAAM,GAAG,GAAG,MAAM,QAAQ,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;IAC/C,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,KAAK,EACtC,aAAqB,EACrB,IAAW,EACX,EAAE;IACF,MAAM,IAAI,GAAG;QACX,GAAG,EAAE,IAAI;KACV,CAAC;IACF,MAAM,GAAG,GAAG,MAAM,SAAS,CACzB,cAAc,CAAC,kBAAkB,EACjC,IAAI,EACJ,aAAa,CACd,CAAC;IACF,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,KAAK,EAAE,aAAqB,EAAE,IAAY,EAAE,EAAE;IAC5E,MAAM,QAAQ,GAAG;QACf,IAAI,EAAE,IAAI;KACX,CAAC;IACF,MAAM,GAAG,GAAG,MAAM,SAAS,CACzB,cAAc,CAAC,mBAAmB,EAClC,QAAQ,EACR,aAAa,CACd,CAAC;IACF,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,EAAE,aAAqB,EAAE,GAAW,EAAE,EAAE;IAC5E,MAAM,GAAG,GAAG,MAAM,QAAQ,CACxB,eAAe,CAAC,iBAAiB,GAAG,GAAG,EACvC,aAAa,CACd,CAAC;IACF,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,EAC7B,aAAqB,EACrB,KAAa,EACb,MAAc,EACd,EAAE;IACF,MAAM,GAAG,GAAG,MAAM,QAAQ,CACxB,cAAc,CAAC,WAAW,GAAG,GAAG,KAAK,IAAI,MAAM,EAAE,EACjD,aAAa,CACd,CAAC;IACF,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,KAAK,EAClC,aAAqB,EACrB,IAAS,EACT,GAAW,EACX,EAAE;IACF,MAAM,GAAG,GAAG,MAAM,SAAS,CACzB,eAAe,CAAC,iBAAiB,GAAG,GAAG,EACvC,IAAI,EACJ,aAAa,CACd,CAAC;IACF,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,KAAK,EAAE,aAAqB,EAAE,EAAU,EAAE,EAAE;IAC1E,MAAM,GAAG,GAAG,MAAM,QAAQ,CAAC,eAAe,CAAC,YAAY,GAAG,EAAE,EAAE,aAAa,CAAC,CAAC;IAC7E,OAAO,GAAG,CAAC;AACb,CAAC,CAAC\"}","dts":{"name":"/Users/macbookm2/Documents/project/package/my-component-library/fetchaction.d.ts","writeByteOrderMark":false,"text":"export declare const getMessageRecieve: (url: string, dataauthusman: object) => Promise<any>;\r\nexport declare const getDataPegawaiByNip: (dataauthusman: object, data: any[]) => Promise<any>;\r\nexport declare const getPegawaiByNama: (dataauthusman: object, nama: string) => Promise<any>;\r\nexport declare const createColllection: (dataauthusman: object, nip: string) => Promise<any>;\r\nexport declare const getPegawai: (dataauthusman: object, limit: string, offset: string) => Promise<any>;\r\nexport declare const postManyMessage: (dataauthusman: object, body: any, nip: string) => Promise<any>;\r\nexport declare const fetchReadMessage: (dataauthusman: object, id: string) => Promise<any>;\r\n"}}
